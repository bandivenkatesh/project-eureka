server:
  port: 8761
  address: 0.0.0.0
  ssl:
    enabled: false  # Enable this and provide keystore details for production
  forward-headers-strategy: framework

spring:
  application:
    name: eureka-server
  security:
    user:
      name: admin
      password: ${EUREKA_PASSWORD:strongpassword}
  mvc:
    static-path-pattern: /**
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
    pathmatch:
      matching-strategy: ant_path_matcher
  resources:
    static-locations: classpath:/static/
    cache:
      period: 3600
  freemarker:
    template-loader-path: classpath:/templates/
    prefer-file-system-access: false

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    waitTimeInMsWhenSyncEmpty: 0
    enableSelfPreservation: false  # Disable in development, enable in production
    renewalPercentThreshold: 0.85
    response-cache-update-interval-ms: 1000
  instance:
    hostname: ${EUREKA_HOST:localhost}
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 90
    statusPageUrl: http://${eureka.instance.hostname}:${server.port}/actuator/info
    healthCheckUrl: http://${eureka.instance.hostname}:${server.port}/actuator/health
    homePageUrl: http://${eureka.instance.hostname}:${server.port}/
    non-secure-port-enabled: true
    secure-port-enabled: false
  dashboard:
    enabled: true
    path: /dashboard
    template-location: classpath:/templates/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO